@model CodingCraftHOMod1Ex1EF.ViewModels.ProdutosPorLojaViewModel
@using CodingCraftHOMod1Ex1EF.Models

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@Html.Partial("_Pesquisa", Model)

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.NomeLoja)
        </th>
        @*<th>
            @Html.DisplayName("Quantidade")
        </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model.Resultados)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            @*<td>
              @Html.DisplayFor(modelItem => item.LojaProdutos.Select(p => p.Produto).Count())
            </td>*@
            <td>                
                @Html.ActionLink("Editar", "Edit", new { id = item.LojaId }) |          
                @Html.ActionLink("Detalhes", "Details", new { id = item.LojaId }) |
                @Html.ActionLink("Excluir", "Delete", new { id = item.LojaId })
            </td>
        </tr>
    }

</table>


@using (Html.BeginForm("SalvarPesquisa", "Lojas", Model, FormMethod.Get))
{
        if (Model.Resultados.Count() > 0)
        {
        <div class="form-group">

            @Html.LabelFor(model => model.FormatoEscolhido, "Formato", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model => model.FormatoEscolhido, "Selecione o formato", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FormatoEscolhido, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Salvar pesquisa" class="btn btn-default" />
            </div>
        </div>
    } else
    {
        <div>Não há registros.</div>
    }
}
